
(

;; Predicates on characters.
(defn digit? (c)
  (and (char? c)
       (char<= #\0 c #\9)))

(defn alpha? (c)
  (and (char? c)
       (char<= #\a c #\z)))

(defn doublequote? (c)
  (and (char? c)
       (eq #\" c)))

;;; ==================================
;;; Grammar
;;; ==================================

;; Terminals
(def _any (peg-terminal ->true))
(def _digit (peg-terminal digit?))
(def _alpha (peg-terminal alpha?))

;; Rules
(def _integer (peg=> (peg+ _digit) string->int))
(def _atom (peg-alt _integer
		    ;_string  ;; TODO
		    ))
(def _expr _atom)

;; Def
(def _lisp_grammar _expr)


;; Public interface.
;; Returns a list of result, rest.
(defn read (in)
  (_lisp_grammar in
		 list
		 (lambda (&rest failure-reason)
		   (cons '*error* failure-reason))))
)
