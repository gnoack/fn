
(defn load-grammar! (filename)
  (_pp_grammar (string->list (file->string filename))
               (lambda (result rest)
                 (println "Loaded grammar " filename)
                 (eval result))
               print-parse-error-and-die))

(load-grammar! "examples/lisp.g")


(defgrammar base-grammar ()
  (def ANY          _any)
  (def DIGIT        _digit)
  (def END-OF-INPUT peg-empty)
  (def WHITESPACE   _whitespace)
  (def EPSILON      (peg-seq))
)

(def parse-lisp-exprs (dict-get (lisp-grammar (base-grammar)) 'exprs))

(println (parse-lisp-exprs (string->list (file->string "examples/peg-parse.fn"))
                           list
                           print-parse-error-and-die))
