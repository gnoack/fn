
(progn
  (load-file "examples/ast.fn")
  (defn foo->FOO (x)   (if (eq? x 'foo) 'FOO x))
  (defn bar->BAR (x)   (if (eq? x 'bar) 'BAR x))
  (defn write-identity (var value)
    `(set! ,var ,value))
  true)

(eql? 'FOO
      (ast-transform 'foo foo->FOO write-identity))

(eql? '(let ((x FOO))
         (x 1 2 bar FOO))
     (ast-transform '(let ((x foo))
                       (x 1 2 bar foo))
                    foo->FOO write-identity))

(eql? '(set! foo FOO)
      (ast-transform '(set! foo foo)
                     foo->FOO write-identity))

(eql? '(def foo FOO)
      (ast-transform '(def foo foo)
                     foo->FOO write-identity))

(eql? '($mem-set! foo 1 100)
      (ast-transform '(set! foo 100)
                     identity
                     (lambda (var value)
                       `($mem-set! ,var 1 ,value))))
