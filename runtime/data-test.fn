;; Hash function tests.
(= (hash 'foo) (hash 'foo))
(not (= (hash 'foo) (hash 'bar)))

(= (hash #\x) (hash #\x))

(= (hash (string->list "hello world"))
   (hash (string->list "hello world")))

(not (= (hash (string->list "hallo welt"))
        (hash (string->list "hello world"))))

;; Dictionary tests.
(->true
 (def %dict (make-dict))
 (dict-put! %dict 'foo 1)
 (dict-put! %dict 'bar 2)
 (dict-put! %dict 'baz 3))

(= 1 (dict-get %dict 'foo))
(= 2 (dict-get %dict 'bar))
(= 3 (dict-get %dict 'baz))

(progn
  ;; Overwrite
  (dict-put! %dict 'foo 99)
  (= 99 (dict-get %dict 'foo)))

(= 3 (dict-size %dict))  ; Dict size is the same.

(dict-has-key? %dict 'foo)
(dict-has-key? %dict 'bar)
(dict-has-key? %dict 'baz)
(not (dict-has-key? %dict 'quux))

;; TODO: Write remove function.
;; (progn
;;   (dict-remove! %dict 'bar)
;;   (= 2 (dict-size %dict)))

;; (= 2 (length (dict-key-value-pairs %dict)))

;; Try with character list key
(progn
  (def %my-key (string->list "example"))
  (dict-put! %dict %my-key 42)
  (= 42 (dict-get %dict %my-key)))
