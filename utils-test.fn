(

; Integer parsing.
(eq 123 (string->int "123"))

; Lists
(eq 3 (nth (list 1 2 3 4 5) 2))
(eq #\d (nth "abcdefg" 3))
(eq 6 (length "abcdef"))
(eql "abc" (reverse "cba"))

; Digit to int
(eq 3 (digit->int #\3))

; Integer coding
(eql "1" (int->string 1 10))
(eql "123" (int->string 123 10))

;; Primitives...
(<= 1 2)
(<= 2 2)
(not (<= 2 1))
(< 1 2)
(not (< 2 2))
(not (< 2 1))
(< 1 2 3)
(not (< 3 4 1))
(not (< 1 1 2))
(<= 1 1 2)


)

